openapi: 3.1.0
info:
  title: Minehut API
  description: >
    This specification is an unofficial API specification of the Minehut API.
    Publicly accessible routes will be documented, however additional routes may be contributed by the community.
    Please keep in mind that usage of the API is meant for private use only, and using the API for
    malicious purposes is not allowed.


    This API is maintained by Santio for usage in the MinehutUtils project used in the official Minehut discord.
  version: 1.0.0
servers:
  - url: https://api.minehut.com
    description: The production API
  - url: https://api.dev.minehut.com/
    description: The development API
tags:
  - name: Network
    description: Routes relating to the core network, such as statistics and player distribution
  - name: Servers
    description: Routes relating to player servers running on Minehut, such as querying data, getting servers, and more
paths:
  /network/simple_stats:
    get:
      tags:
        - Network
      summary: Get the network statistics
      description: Returns the network statistics of the server
      operationId: getNetworkStatistics
      responses:
        200:
          description: The network statistics
          content:
            application/json:
              schema:
                $ref: './components/network/simple_stats.yaml/#/SimpleStats'
                description: The network statistics
  /network/homepage_stats:
    get:
      tags:
        - Network
      summary: Get the homepage statistics
      description: Returns the statistics that are displayed on the Minehut homepage
      operationId: getHomepageStatistics
      responses:
        200:
          description: The homepage statistics
          content:
            application/json:
              schema:
                $ref: './components/network/homepage_stats.yaml/#/HomepageStats'
                description: The homepage statistics
  /network/players/distribution:
    get:
      tags:
        - Network
      summary: Get the player distribution
      description: Returns the distribution of players across the network
      operationId: getPlayerDistribution
      responses:
        200:
          description: The player statistics and distribution
          content:
            application/json:
              schema:
                $ref: './components/network/player_stats.yaml/#/PlayerStats'
                description: The player statistics and distribution
  /network/resourcepacks/info:
    get:
      tags:
        - Network
      summary: Get the resource pack information
      description: Returns the information about the Minehut resource pack
      operationId: getResourcePackInfo
      responses:
        200:
          description: The resource pack information
          content:
            application/json:
              schema:
                $ref: './components/network/resourcepack_info.yaml/#/ResourcePackInfo'
                description: The resource pack information
  /network/ranks:
    get:
      tags:
        - Network
      summary: Get all ranks
      description: Get the list of every rank on Minehut
      operationId: getRanks
      responses:
        200:
          description: The ranks
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: './components/network/rank.yaml/#/Rank'
                description: A collection of every rank
  /servers:
    get:
      tags:
        - Servers
      summary: Get all online servers
      description: Get a list of all online servers on Minehut
      operationId: getServers
      parameters:
        - name: q
          in: query
          required: false
          description: The query to search for servers
          schema:
            type: string
          example: SantioTest
        - name: category
          in: query
          required: false
          description: The category to filter servers by
          schema:
            type: string
          example: Box
        - name: limit
          in: query
          required: false
          description: The maximum amount of servers to return
          schema:
            type: integer
          example: 10
      responses:
        200:
          description: The servers
          content:
            application/json:
              schema:
                type: object
                properties:
                  total_players:
                    type: integer
                    minimum: 0
                    description: The total amount of players online on the network
                    example: 1000
                  total_servers:
                    type: integer
                    minimum: 0
                    description: The total amount of servers online on the network
                    example: 100
                  total_search_results:
                    type: integer
                    minimum: 0
                    description: The total amount of servers (included in this response) that are publicly searchable
                    example: 100
                  servers:
                    type: array
                    items:
                      $ref: './components/server/listed_server.yaml/#/ListedServer'
                    description: A list of all servers
                description: The response containing all servers
  /server/{identifier}:
    get:
      tags:
        - Servers
      summary: Get a server
      description: Get a single server either by its id or name
      operationId: getServer
      parameters:
        - name: byName
          in: query
          required: true
          description: Whether to get the server by its name or id
          schema:
            type: boolean
          example: true
        - name: identifier
          in: path
          required: true
          description: The id or name of the server
          schema:
            type: string
          example: SantioTest
      responses:
        200:
          description: The server
          content:
            application/json:
              schema:
                type: object
                properties:
                  server:
                    $ref: './components/server/server.yaml/#/Server'
                    description: The server
                description: The server
        400:
          description: The server was not found (Status code is actually 200)
          content:
            application/json:
              schema:
                type: object
                properties:
                  server:
                    type: object
                    description: This value is null if the server was not found
                    example: null
                description: The error message
  /servers/icons:
    get:
      tags:
        - Servers
      summary: Get all icons
      description: Get a list of all icons available for purchase
      operationId: getIcons
      responses:
        200:
          description: The icons
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: './components/server/icon.yaml/#/Icon'
                description: A collection of every icon
  /v1/server/categories:
    get:
      tags:
        - Servers
      summary: Get all categories
      description: Get a list of all categories
      operationId: getCategories
      responses:
        200:
          description: The categories
          content:
            application/json:
              schema:
                type: object
                properties:
                  items:
                    type: array
                    items:
                      $ref: './components/server/category.yaml/#/Category'
                    description: A collection of every category